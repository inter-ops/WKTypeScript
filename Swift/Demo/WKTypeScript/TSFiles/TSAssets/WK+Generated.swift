//
//  WK+Generated.swift
//  Inter-Ops/WKTypeScript
//
//  Extensions for WebKit
//  Generated with WKTypeScript v0.0.1
//
//  THIS FILE WAS AUTOMATICALLY GENERATED AND SHOULD NOT BE TOUCHED.
//

import Foundation
import WebKit

extension WKWebView {
    
    // MARK: Generated by File
    // Syntax: webView.ts(index: .myFunc())
    //         webView.index(.myFunc())
    // Safety: webView.indexTS(.myFunc())
    // NOTE: For syntax safety, we could go with the latter
    
    // MARK:- global.ts
    /// Call a function or variable from `global.ts` to be evaluated in some WKWebView object.
    /// - parameters:
    ///     - function: The Swift-generated function or variable from `global.ts`
    /// # Usage
    ///     webView.global(.variable)
    ///     webView.global(.function())
    func global(_ function: WKTypeScript.global) { js(function.js) }
    /// Call a function or variable from `global.ts` to be evaluated in some WKWebView object.
    /// - parameters:
    ///     - global: The Swift-generated function or variable from `global.ts`
    /// # Usage
    ///     webView.ts(global: .variable)
    ///     webView.ts(global: .function())
    func ts(global: WKTypeScript.global) { js(global.js) }
    // MARK:- index.ts
    /// Call a function or variable from `index.ts` to be evaluated in some WKWebView object.
    /// - parameters:
    ///     - function: The Swift-generated function or variable  from `index.ts`
    /// # Usage
    ///     webView.index(.variable)
    ///     webView.index(.function())
    func index(_ function: WKTypeScript.index) { js(function.js) }
    /// Call a function or variable from `index.ts` to be evaluated in some WKWebView object.
    /// - parameters:
    ///     - index: The Swift-generated function or variable from `index.ts`
    /// # Usage
    ///     webView.ts(index: .variable)
    ///     webView.ts(index: .function())
    func ts(index: WKTypeScript.index) { js(index.js) }
    // MARK:- mode.ts
    /// Call a function or variable from `mode.ts` to be evaluated in some WKWebView object.
    /// - parameters:
    ///     - function: The Swift-generated function or variable  from `mode.ts`
    /// # Usage
    ///     webView.mode(.variable)
    ///     webView.mode(.function())
    func mode(_ function: WKTypeScript.mode) { js(function.js) }
    /// Call a function or variable from `mode.ts` to be evaluated in some WKWebView object.
    /// - parameters:
    ///     - mode: The Swift-generated function or variable from `mode.ts`
    /// # Usage
    ///     webView.ts(mode: .variable)
    ///     webView.ts(mode: .function())
    func ts(mode: WKTypeScript.mode) { js(mode.js) }
    
}
